{"version":3,"sources":["FeedBackButton/FeedBackButton.js","Statistics/Statistics.js","EspressoStatictic/EspressoStatictic.js","App.js","index.js"],"names":["Button","styled","button","FeedBackButton","name","onButtonClick","onClick","StatisticList","ul","Statistics","statistic","statsNames","Object","entries","map","item","key","Warapper","div","StyledTitle","h1","ButtonsUl","StyledStatisticTitle","h2","Notification","p","EspressoStatictic","state","good","neutral","bad","total","positiveFeedbacks","buttonClickHeadler","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","keys","filter","buttonItem","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4YAKA,IAAMA,EAASC,IAAOC,OAAV,KAsBGC,EAfQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC9B,OACE,kBAACL,EAAD,CACEM,QAAS,WACPD,EAAcD,KAGfA,I,4MCdP,IAAMG,EAAgBN,IAAOO,GAAV,KA+BJC,EAtBI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACdC,EAAaC,OAAOC,QAAQH,GAElC,OACE,kBAACH,EAAD,KACGI,EAAWG,KAAI,SAAAC,GACd,OACE,wBAAIC,IAAKD,EAAK,IACZ,8BAAOA,EAAK,GAAZ,KAAwB,IACxB,8BACGA,EAAK,GACO,sBAAZA,EAAK,GAA6B,IAAM,U,8kBCpBvD,IAAME,EAAWhB,IAAOiB,IAAV,KAKRC,EAAclB,IAAOmB,GAAV,KAIXC,EAAYpB,IAAOO,GAAV,KAMTc,EAAuBrB,IAAOsB,GAAV,KAIpBC,EAAevB,IAAOwB,EAAV,KAIGC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,kBAAmB,G,EAGrBC,mBAAqB,SAAA7B,GACnB,EAAK8B,UAAS,SAAAC,GACZ,OAAO,eACJ/B,EAAO+B,EAAU/B,GAAQ,KAE3B,EAAKgC,qB,EAGVA,mBAAqB,WACnB,EAAKF,UAAS,SAAAC,GACZ,MAAO,CACLJ,MAAOI,EAAUJ,MAAQ,KAE1B,EAAKM,kC,EAGVA,gCAAkC,WAAO,IAAD,EACd,EAAKV,MAArBI,EAD8B,EAC9BA,MAGFC,EAJgC,EACvBJ,KAGmBG,EAAS,IAC3C,EAAKG,UAAS,WACZ,MAAO,CACLF,kBAAmBM,KAAKC,MAA0B,IAApBP,GAA2B,S,uDAKrD,IAAD,OACCD,EAAUS,KAAKb,MAAfI,MACFpB,EAAaC,OAAO6B,KAAKD,KAAKb,OAAOe,QACzC,SAAA3B,GAAI,MAAa,UAATA,GAA6B,sBAATA,KAG9B,OACE,kBAACE,EAAD,KACE,kBAACE,EAAD,8BACA,kBAACE,EAAD,KACGV,EAAWG,KAAI,SAAA6B,GACd,OACE,wBAAI3B,IAAK2B,GACP,kBAAC,EAAD,CACEvC,KAAMuC,EACNtC,cAAe,EAAK4B,0BAM9B,kBAACX,EAAD,kBACY,IAAVS,GAAe,kBAAC,EAAD,CAAYrB,UAAW8B,KAAKb,SAC3C,kBAACH,EAAD,+B,GA5DqCoB,aCrBhCC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6877bdb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst FeedBackButton = ({ name, onButtonClick }) => {\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        onButtonClick(name);\r\n      }}\r\n    >\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\nFeedBackButton.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  onButtonClick: propTypes.func.isRequired,\r\n};\r\nexport default FeedBackButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst StatisticList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Statistics = ({ statistic }) => {\r\n  const statsNames = Object.entries(statistic);\r\n\r\n  return (\r\n    <StatisticList>\r\n      {statsNames.map(item => {\r\n        return (\r\n          <li key={item[0]}>\r\n            <span>{item[0]}:</span>{' '}\r\n            <span>\r\n              {item[1]}\r\n              {item[0] === 'positiveFeedbacks' ? '%' : ''}\r\n            </span>\r\n          </li>\r\n        );\r\n      })}\r\n    </StatisticList>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  statistic: propTypes.objectOf(propTypes.array).isRequired,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport FeedBackButton from '../FeedBackButton/FeedBackButton';\nimport Statistics from '../Statistics/Statistics';\n\nconst Warapper = styled.div`\n  width: 375px;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n`;\nconst ButtonsUl = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  padding: 0;\n`;\nconst StyledStatisticTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nconst Notification = styled.p`\n  text-align: center;\n`;\n\nexport default class EspressoStatictic extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positiveFeedbacks: 0,\n  };\n\n  buttonClickHeadler = name => {\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    }, this.countTotalFeedback);\n  };\n\n  countTotalFeedback = () => {\n    this.setState(prevState => {\n      return {\n        total: prevState.total + 1,\n      };\n    }, this.countPositiveFeedbackPercentage);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { total, good } = this.state;\n    // const total = this.state.total;\n    // const good = this.state.good;\n    const positiveFeedbacks = (good / total) * 100;\n    this.setState(() => {\n      return {\n        positiveFeedbacks: Math.floor(positiveFeedbacks * 100) / 100,\n      };\n    });\n  };\n\n  render() {\n    const { total } = this.state;\n    const statsNames = Object.keys(this.state).filter(\n      item => item !== 'total' && item !== 'positiveFeedbacks',\n    );\n\n    return (\n      <Warapper>\n        <StyledTitle>Please leave feedback</StyledTitle>\n        <ButtonsUl>\n          {statsNames.map(buttonItem => {\n            return (\n              <li key={buttonItem}>\n                <FeedBackButton\n                  name={buttonItem}\n                  onButtonClick={this.buttonClickHeadler}\n                />\n              </li>\n            );\n          })}\n        </ButtonsUl>\n        <StyledStatisticTitle>Statistic</StyledStatisticTitle>\n        {(total !== 0 && <Statistics statistic={this.state} />) || (\n          <Notification>No feedback given</Notification>\n        )}\n      </Warapper>\n    );\n  }\n}\n","import React from 'react';\nimport EspressoStatictic from './EspressoStatictic/EspressoStatictic';\n\nfunction App() {\n  return <EspressoStatictic />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}