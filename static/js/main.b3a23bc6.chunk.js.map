{"version":3,"sources":["FeedBackButton/FeedBackButton.js","Statistics/Statistics.js","EspressoStatictic/EspressoStatictic.js","App.js","index.js"],"names":["Button","styled","button","FeedBackButton","name","onButtonClick","onClick","StatisticList","ul","Statistics","statistic","total","positiveFeedBack","statsNames","Object","entries","map","item","key","Warapper","div","StyledTitle","h1","ButtonsUl","StyledStatisticTitle","h2","Notification","p","EspressoStatictic","state","good","neutral","bad","buttonClickHeadler","setState","prevState","countTotalFeedback","values","reduce","acc","val","this","Math","floor","keys","buttonItem","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4YAKA,IAAMA,EAASC,IAAOC,OAAV,KAsBGC,EAfQ,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC9B,OACE,kBAACL,EAAD,CACEM,QAAS,WACPD,EAAcD,KAGfA,I,4MCdP,IAAMG,EAAgBN,IAAOO,GAAV,KAiCJC,EAxBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAChCC,EAAaC,OAAOC,QAAQL,GAElC,OACE,kBAACH,EAAD,KACGM,EAAWG,KAAI,SAAAC,GACd,OACE,wBAAIC,IAAKD,EAAK,IACZ,8BAAOA,EAAK,GAAZ,KADF,IAC0B,8BAAOA,EAAK,QAI1C,wCAAcN,GACd,oDAA0BC,EAA1B,Q,8kBCtBN,IAAMO,EAAWlB,IAAOmB,IAAV,KAKRC,EAAcpB,IAAOqB,GAAV,KAIXC,EAAYtB,IAAOO,GAAV,KAMTgB,EAAuBvB,IAAOwB,GAAV,KAIpBC,EAAezB,IAAO0B,EAAV,KAIGC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,SAAA7B,GACnB,EAAK8B,UAAS,SAAAC,GACZ,OAAO,eACJ/B,EAAO+B,EAAU/B,GAAQ,KAE3B,EAAKgC,qB,EAGVA,mBAAqB,kBACnBtB,OAAOuB,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,I,uDAElD,IAAD,OACCV,EAASW,KAAKZ,MAAdC,KACFnB,EAAQ8B,KAAKL,qBACbxB,EAAmB8B,KAAKC,MAAOb,EAAOnB,EAAS,KAC/CE,EAAaC,OAAO8B,KAAKH,KAAKZ,OAEpC,OACE,kBAACV,EAAD,KACE,kBAACE,EAAD,8BACA,kBAACE,EAAD,KACGV,EAAWG,KAAI,SAAA6B,GACd,OACE,wBAAI3B,IAAK2B,GACP,kBAAC,EAAD,CACEzC,KAAMyC,EACNxC,cAAe,EAAK4B,0BAM9B,kBAACT,EAAD,kBACY,IAAVb,GACA,kBAAC,EAAD,CACED,UAAW+B,KAAKZ,MAChBlB,MAAOA,EACPC,iBAAkBA,KAEhB,kBAACc,EAAD,+B,GA9CiCoB,aCrBhCC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b3a23bc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst FeedBackButton = ({ name, onButtonClick }) => {\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        onButtonClick(name);\r\n      }}\r\n    >\r\n      {name}\r\n    </Button>\r\n  );\r\n};\r\nFeedBackButton.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  onButtonClick: propTypes.func.isRequired,\r\n};\r\nexport default FeedBackButton;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport propTypes from 'prop-types';\r\n\r\nconst StatisticList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Statistics = ({ statistic, total, positiveFeedBack }) => {\r\n  const statsNames = Object.entries(statistic);\r\n\r\n  return (\r\n    <StatisticList>\r\n      {statsNames.map(item => {\r\n        return (\r\n          <li key={item[0]}>\r\n            <span>{item[0]}:</span> <span>{item[1]}</span>\r\n          </li>\r\n        );\r\n      })}\r\n      <span>total: {total}</span>\r\n      <span>positive feedback: {positiveFeedBack} %</span>\r\n    </StatisticList>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  statistic: propTypes.objectOf(\r\n    propTypes.oneOfType([propTypes.string, propTypes.number]),\r\n  ).isRequired,\r\n  total: propTypes.number.isRequired,\r\n  positiveFeedBack: propTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport FeedBackButton from '../FeedBackButton/FeedBackButton';\nimport Statistics from '../Statistics/Statistics';\n\nconst Warapper = styled.div`\n  width: 375px;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n`;\nconst ButtonsUl = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  padding: 0;\n`;\nconst StyledStatisticTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nconst Notification = styled.p`\n  text-align: center;\n`;\n\nexport default class EspressoStatictic extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  buttonClickHeadler = name => {\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    }, this.countTotalFeedback);\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((acc, val) => acc + val, 0);\n\n  render() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedBack = Math.floor((good / total) * 100);\n    const statsNames = Object.keys(this.state);\n\n    return (\n      <Warapper>\n        <StyledTitle>Please leave feedback</StyledTitle>\n        <ButtonsUl>\n          {statsNames.map(buttonItem => {\n            return (\n              <li key={buttonItem}>\n                <FeedBackButton\n                  name={buttonItem}\n                  onButtonClick={this.buttonClickHeadler}\n                />\n              </li>\n            );\n          })}\n        </ButtonsUl>\n        <StyledStatisticTitle>Statistic</StyledStatisticTitle>\n        {(total !== 0 && (\n          <Statistics\n            statistic={this.state}\n            total={total}\n            positiveFeedBack={positiveFeedBack}\n          />\n        )) || <Notification>No feedback given</Notification>}\n      </Warapper>\n    );\n  }\n}\n","import React from 'react';\nimport EspressoStatictic from './EspressoStatictic/EspressoStatictic';\n\nfunction App() {\n  return <EspressoStatictic />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}